'''
Home of the CrunchCube class, that defines API functions
that users can use to perform different analysis.
'''

import json

from cr.cube.dimension import Dimension


class CrunchCube(object):
    '''Main point of access for API for the Crunch Cube.'''

    # Internal Functions

    def __init__(self, cube):
        # @cube: Represents the cube response object, as generated by
        # the zz9d cube factory.

        # Cube can come in as a JSON or as a dictionary, So we need to check
        # its type, and convert it to a dictionary if it's JSON
        if isinstance(cube, str):
            cube = json.loads(cube)

        if isinstance(cube, dict):
            self._cube = cube
            self._dimensions = self._get_dimensions(cube)

        raise TypeError((
            'Unsupported type provided: {}. '
            'A `cube` must be JSON or `dict`.'
        ).format(type(cube)))

    @classmethod
    def _get_dimensions(cls, cube):
        '''Gets the dimensions of the crunch cube.'''
        return [Dimension(entry) for entry in cube.dimensions]

    # API Functions
