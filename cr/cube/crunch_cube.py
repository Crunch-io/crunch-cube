import json

from cr.cube.dimension import Dimension


class CrunchCube(object):

    def __init__(self, cube):
        # @cube: Represents the cube response object, as generated by
        # the zz9d cube factory.

        # Cube can come in as a JSON or as a dictionary, So we need to check
        # its type, and convert it to a dictionary if it's JSON, if possible.
        if isinstance(cube, str):
            cube = json.loads(cube)

        # If conversion to dict is not possible, or an unexpected type is
        # provided, fail sooner rather than later.
        if not isinstance(cube, dict):
            raise TypeError((
                'Unsupported type provided: {}. '
                'A `cube` must be JSON or `dict`.'
            ).format(type(cube)))

        self._cube = cube
        self._dimensions = self._get_dimensions(cube)

    @classmethod
    def _get_dimensions(cls, cube):
        '''Gets the dimensions of the crunch cube.'''
        return [Dimension(entry) for entry in cube['result']['dimensions']]

    # API Functions
